
private static String inStr(String msg) {
    try {
        System.in.available();
    } catch (Exception e) {
        System.out.println("Input stream not available.");
        System.exit(1);
    }
    var sc = new Scanner(System.in);
    System.out.println(msg);
    String toRet = sc.nextLine();
    return toRet;
}

private static int inInt(String msg) {
    try {
        System.in.available();
    } catch (Exception e) {
        System.out.println("Input stream not available.");
        System.exit(1);
    }
    var sc = new Scanner(System.in);
    System.out.println(msg);
    int toRet = sc.nextInt();
    return toRet;
}

private static float inFlo(String msg) {
    try {
        System.in.available();
    } catch (Exception e) {
        System.out.println("Input stream not available.");
        System.exit(1);
    }
    var sc = new Scanner(System.in);
    System.out.println(msg);
    float toRet = sc.nextFloat();
    return toRet;
}

private static double inDou(String msg) {
    try {
        System.in.available();
    } catch (Exception e) {
        System.out.println("Input stream not available.");
        System.exit(1);
    }
    var sc = new Scanner(System.in);
    System.out.println(msg);
    double toRet = sc.nextDouble();
    return toRet;
}

private static long inLon(String msg) {
    try {
        System.in.available();
    } catch (Exception e) {
        System.out.println("Input stream not available.");
        System.exit(1);
    }
    var sc = new Scanner(System.in);
    System.out.println(msg);
    long toRet = sc.nextLong();
    return toRet;
}

private static short inSho(String msg) {
    try {
        System.in.available();
    } catch (Exception e) {
        System.out.println("Input stream not available.");
        System.exit(1);
    }
    var sc = new Scanner(System.in);
    System.out.println(msg);
    short toRet = sc.nextShort();
    return toRet;
}

private static boolean inBoo(String msg) {
    try {
        System.in.available();
    } catch (Exception e) {
        System.out.println("Input stream not available.");
        System.exit(1);
    }
    var sc = new Scanner(System.in);
    System.out.println(msg);
    boolean toRet = sc.nextBoolean();
    return toRet;
}

private static byte inByt(String msg) {
    try {
        System.in.available();
    } catch (Exception e) {
        System.out.println("Input stream not available.");
        System.exit(1);
    }
    var sc = new Scanner(System.in);
    System.out.println(msg);
    byte toRet = sc.nextByte();
    return toRet;
}